# Listen on port 443 with SSL and HTTP/2 support.
listen 443 ssl;
listen [::]:443 ssl;

# Set the character encoding to UTF-8.
charset utf-8;

# TCP socket options to optimize data delivery for static files and real-time interaction.
tcp_nopush on;
tcp_nodelay on;

# General configuration and security settings.
ignore_invalid_headers on;
server_tokens off;
sendfile on;

# Include the SSL and DH param configuration.
include /etc/nginx/custom/certs.conf;

# SSL/TLS configuration.
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 4h;
ssl_session_tickets off; # Disable session tickets for security.

# Security headers.
add_header Access-Control-Allow-Origin $http_origin always;
add_header Access-Control-Allow-Headers "DNT, X-CustomHeader, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type" always;
add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header Referrer-Policy "no-referrer-when-downgrade" always;
add_header Feature-Policy "accelerometer 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'" always;

# Client request/response configurations.
client_body_buffer_size 16K;
client_header_buffer_size 1k;
client_max_body_size 8m;
client_body_timeout 12;
client_header_timeout 12;
large_client_header_buffers 4 4k;

# General timeouts and rate limiting.
keepalive_timeout 65s;
send_timeout 15s;
limit_req zone=CUSTOM_ZONE burst=10 nodelay;

# Gzipped CSS file configurations.
location ~ \.css\.gz$ {
    types {
        text/css gz;
    }
    add_header Content-Encoding gzip;
}

# Gzipped JS file configurations.
location ~* \.js\.jgz$ {
    types {
        application/javascript jgz;
    }
    add_header Content-Encoding gzip;
}

# Blocking access to sensitive parts of a Laravel application.
location ~* /(bootstrap|config|database|node_modules|resources|routes|storage|tests|vendor|artisan\.php|composer\.json|composer\.lock|package\.json|package-lock\.json|phpunit\.xml|postcss\.config\.js|webpack\.config\.js) {
    deny all;
    return 404;
}

# Deny access to dot-files (except .well-known directory).
location ~ /\.(?!well-known).* {
    deny all;
    return 404;
}

# Disable logs for favicon.
location = /favicon.ico {
    log_not_found off;
    access_log off;
}

# Disable logs for robots.txt.
location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
}

# Pass all other requests to index.php.
location / {
    try_files $uri $uri/ /index.php?$query_string;
}

# PHP processing.
location ~ \.php$ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_send_timeout 600s;
    proxy_read_timeout 600s;

    # Check if the file exists, if not return a 404 error
    try_files $uri =404;

    # Split the path info to determine the script name and path args
    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    # Pass the request to the FastCGI server
    fastcgi_pass php:9000;

    # Standard FastCGI parameters
    include fastcgi_params;

    # Buffer sizes
    fastcgi_buffer_size 256k;
    fastcgi_buffers 4 256k;
    fastcgi_busy_buffers_size 256k;

    # Set FastCGI timeouts
    fastcgi_send_timeout 600s;
    fastcgi_read_timeout 600s;

    # Set SCRIPT_FILENAME to the full path of the script, including document root
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;

    # Enable FastCGI keep alive: this can help with long-lived connections
    fastcgi_keep_conn on;
}